(require '[clojure.pprint :refer [pprint]])
(def -locals)
(defn myppfn [pp-locals? m]
  (let [{:keys [form result locals]} m]
    (println)
    (pprint form)
    (println "......=>")
    (pprint result)
    (when pp-locals?
      (println "......")
      (pprint {:locals locals}))
    (def rr result)
    (def -locals locals)))
(defmacro dlo []
  (cons \`do
        (for [[k# v#] -locals]
          (do
            (println "(def" (symbol k#) v# ")")
            `(def ~(symbol k#) ~v#)))))
(use 'debux.core)
(require '[sparkofreason.hashtag.core :as ht])
(ht/defhashtag p  (partial myppfn false):locals? true)
(ht/defhashtag p+ (partial myppfn true) :locals? true)
